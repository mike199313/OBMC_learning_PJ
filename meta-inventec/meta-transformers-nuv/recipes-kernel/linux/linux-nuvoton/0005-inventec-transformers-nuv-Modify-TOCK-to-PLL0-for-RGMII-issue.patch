From 95743bf61c8afced8c84e9de69c4bf5896e85616 Mon Sep 17 00:00:00 2001
From: Matt Cheng <cheng.matt@inventec.com>
Date: Mon, 17 Jul 2023 17:59:34 +0800
Subject: [PATCH] [transformers-nuv] Modify TOCK to PLL0 for RGMII issue

---
 drivers/clk/clk-npcm7xx.c | 8 ++++++++
 1 file changed, 8 insertions(+)
 mode change 100644 => 100755 drivers/clk/clk-npcm7xx.c

diff --git a/drivers/clk/clk-npcm7xx.c b/drivers/clk/clk-npcm7xx.c
old mode 100644
new mode 100755
index 6fba5beba3f5..1c5d5abf0aad
--- a/drivers/clk/clk-npcm7xx.c
+++ b/drivers/clk/clk-npcm7xx.c
@@ -34,6 +34,7 @@ struct npcm7xx_clk_pll {
 #define PLLCON_PWDEN	BIT(12)
 #define PLLCON_OTDV1	GENMASK(10, 8)
 #define PLLCON_INDV	GENMASK(5, 0)
+#define CLKSEL_CLKOUTSEL       18
 
 static unsigned long npcm7xx_clk_pll_recalc_rate(struct clk_hw *hw,
 						 unsigned long parent_rate)
@@ -516,6 +517,13 @@ static void __init npcm7xx_clk_init(struct device_node *clk_np)
 			npcm7xx_clk_data->hws[mux_data->onecell_idx] = hw;
 	}
 
+	/* Set TOCK to PLL0 */
+	unsigned int read;
+	read = ioread32(clk_base + NPCM7XX_CLKSEL);
+	read = read & ~(7 << CLKSEL_CLKOUTSEL);
+	iowrite32(read, (clk_base + NPCM7XX_CLKSEL));
+	read = ioread32(clk_base + NPCM7XX_CLKSEL);
+
 	/* Register clock dividers specified in npcm7xx_divs */
 	for (i = 0; i < ARRAY_SIZE(npcm7xx_divs); i++) {
 		const struct npcm7xx_clk_div_data *div_data = &npcm7xx_divs[i];
-- 
2.25.1

