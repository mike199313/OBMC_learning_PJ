From e629ca953f042f6ca8f8478ca78b287254bb5e1a Mon Sep 17 00:00:00 2001
From: Tommy Lin <lin.tommysc@inventec.com>
Date: Tue, 11 Jan 2022 06:46:08 +0000
Subject: [PATCH 07/27] Boot flag

---
 redfish-core/lib/systems.hpp | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

diff --git a/redfish-core/lib/systems.hpp b/redfish-core/lib/systems.hpp
index c9d31d17..2632aa05 100644
--- a/redfish-core/lib/systems.hpp
+++ b/redfish-core/lib/systems.hpp
@@ -634,6 +634,11 @@ inline std::string dbusToRfBootSource(const std::string& dbusSource)
     {
         return "Cd";
     }
+    if (dbusSource ==
+        "xyz.openbmc_project.Control.Boot.Source.Sources.Diagnostic")
+    {
+        return "Diags";
+    }
     if (dbusSource == "xyz.openbmc_project.Control.Boot.Source.Sources.Network")
     {
         return "Pxe";
@@ -803,7 +808,7 @@ inline int assignBootParameters(const std::shared_ptr<bmcweb::AsyncResp>& aResp,
     }
     else if (rfSource == "Diags")
     {
-        bootMode = "xyz.openbmc_project.Control.Boot.Mode.Modes.Safe";
+        bootSource = "xyz.openbmc_project.Control.Boot.Source.Sources.Diagnostic";
     }
     else if (rfSource == "Cd")
     {
@@ -1743,6 +1748,19 @@ inline void setBootProperties(const std::shared_ptr<bmcweb::AsyncResp>& aResp,
     setBootModeOrSource(aResp, bootSource);
     setBootType(aResp, bootType);
     setBootEnable(aResp, bootEnable);
+
+    auto readyMsg = crow::connections::systemBus->new_method_call( 
+          "xyz.openbmc_project.Settings", "/xyz/openbmc_project/control/host0/boot/boot_options",
+          "org.freedesktop.DBus.Properties", "Set");
+    readyMsg.append("xyz.openbmc_project.Control.Boot.Flag", "BootFlagValid", std::variant<bool>(true) ); 
+    try
+    {
+        auto intMsg = crow::connections::systemBus->call(readyMsg);
+    }catch (const sdbusplus::exception::SdBusError& e)
+    {
+        BMCWEB_LOG_ERROR << "Error: " << e.what();
+    }
+
 }
 
 /**
-- 
2.34.1

