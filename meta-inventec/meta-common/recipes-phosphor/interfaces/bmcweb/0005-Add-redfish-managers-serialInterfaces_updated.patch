From 99cd302b540c2a432a2c7baa3175497595bc8936 Mon Sep 17 00:00:00 2001
From: Tommy Lin <lin.tommysc@inventec.com>
Date: Tue, 11 Jan 2022 06:21:36 +0000
Subject: [PATCH 05/17] Add redfish managers serialInterfaces

---
 redfish-core/include/redfish.hpp |  1 +
 redfish-core/lib/managers.hpp    | 24 ++++++++++++++++++++++++
 2 files changed, 25 insertions(+)

diff --git a/redfish-core/include/redfish.hpp b/redfish-core/include/redfish.hpp
index ed42b89a..beb22754 100644
--- a/redfish-core/include/redfish.hpp
+++ b/redfish-core/include/redfish.hpp
@@ -86,6 +86,7 @@ class RedfishService
         requestRoutesManagerResetActionInfo(app);
         requestRoutesManagerResetToDefaultsAction(app);
         requestRoutesManagerDiagnosticData(app);
+        requestSerialInterfacesRoutes(app);
         requestRoutesChassisCollection(app);
         requestRoutesChassis(app);
         requestRoutesChassisResetAction(app);
diff --git a/redfish-core/lib/managers.hpp b/redfish-core/lib/managers.hpp
index d1e43fb4..645b8e8c 100644
--- a/redfish-core/lib/managers.hpp
+++ b/redfish-core/lib/managers.hpp
@@ -1971,6 +1971,9 @@ inline void requestRoutesManager(App& app)
         asyncResp->res.jsonValue["ServiceEntryPointUUID"] = uuid;
         asyncResp->res.jsonValue["Model"] = "OpenBmc"; // TODO(ed), get model
 
+        asyncResp->res.jsonValue["SerialInterfaces"] = {
+            {"@odata.id", "/redfish/v1/Managers/bmc/SerialInterfaces"}};
+
         asyncResp->res.jsonValue["LogServices"]["@odata.id"] =
             "/redfish/v1/Managers/bmc/LogServices";
         asyncResp->res.jsonValue["NetworkProtocol"]["@odata.id"] =
@@ -2300,4 +2303,25 @@ inline void requestRoutesManagerCollection(App& app)
         asyncResp->res.jsonValue["Members"] = std::move(members);
         });
 }
+
+inline void requestSerialInterfacesRoutes(App& app)
+{
+    BMCWEB_ROUTE(app, "/redfish/v1/Managers/bmc/SerialInterfaces/")
+        .privileges(redfish::privileges::getSerialInterface)
+        .methods(
+            boost::beast::http::verb::
+                get)([&app](const crow::Request&,
+                        const std::shared_ptr<bmcweb::AsyncResp>& asyncResp) {
+            asyncResp->res.jsonValue["@odata.type"] =
+                "#SerialInterface.v1_5_0.SerialInterface";
+            asyncResp->res.jsonValue["@odata.id"] =
+                "/redfish/v1/Managers/bmc/SerialInterfaces";
+            asyncResp->res.jsonValue["Id"] = "TTY0";
+            asyncResp->res.jsonValue["Name"] = "Manager Serial Interface";
+            asyncResp->res.jsonValue["Description"] = "Management for Serial Interface";
+            asyncResp->res.jsonValue["SignalType"] = "Rs232";
+            asyncResp->res.jsonValue["BitRate"] = "115200";
+            asyncResp->res.jsonValue["FlowControl"] = "None";
+        });
+}
 } // namespace redfish
-- 
2.33.0

