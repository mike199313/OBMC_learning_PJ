From 2c5c3f7b7035fa21191daa4fcf1b8cab5351b0d5 Mon Sep 17 00:00:00 2001
From: "Fred.Chang" <chang.fredys@inventec.com>
Date: Tue, 14 Jun 2022 20:33:42 +0800
Subject: [PATCH 14/27] Bug 1078 - [Transformers][OpenBMC][Redfish]Health
 status is different between CPU and DIMM's empty slot

Sympton/Reason:
	Health status is different between CPU and DIMM's empty slot

Root Cause:
	Redfish doesn't check the property "Functioal" in memory json generation.

Solution/Change:
	[bmcweb]
	   - add the check segment on property "Functioal" in memory region.

Entry Test:
	{
		"@odata.etag": "3544611896",
		"@odata.id": "/redfish/v1/Systems/system/Memory/dimm1",
		"@odata.type": "#Memory.v1_11_0.Memory",
		"AllowedSpeedsMHz": [],
		"BaseModuleType": "RDIMM",
		"BusWidthBits": 0,
		"CapacityMiB": 0,
		"DataWidthBits": 0,
		"ErrorCorrection": "NoECC",
		"FirmwareRevision": "0",
		"Id": "dimm1",
		"Location": {
			"PartLocation": {
				"ServiceLabel": "CPU0_DIMM_A2"
			}
		},
		"Manufacturer": "",
		"Model": "",
		"Name": "DIMM Slot",
		"OperatingSpeedMhz": 0,
		"PartNumber": "NO DIMM",
		"RankCount": 0,
		"SerialNumber": "NO DIMM",
		"SparePartNumber": "",
		"Status": {
			"Health": "Critical",
			"HealthRollup": "OK",
			"State": "Absent"
		}
	}

[comment for 2.12 upgrade]
Some code in getDimmDataByService() is moved to assembleDimmProperties()
Move the related code in this patch as well

---
 redfish-core/lib/memory.hpp | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/redfish-core/lib/memory.hpp b/redfish-core/lib/memory.hpp
index fdb01790..35307a7d 100644
--- a/redfish-core/lib/memory.hpp
+++ b/redfish-core/lib/memory.hpp
@@ -404,6 +404,7 @@ inline void
     aResp->res.jsonValue[jsonPtr]["Name"] = "DIMM Slot";
     aResp->res.jsonValue[jsonPtr]["Status"]["State"] = "Enabled";
     aResp->res.jsonValue[jsonPtr]["Status"]["Health"] = "OK";
+    aResp->res.jsonValue[jsonPtr]["Status"]["HealthRollup"] = "OK";
 
     const uint16_t* memoryDataWidth = nullptr;
     const size_t* memorySizeInKB = nullptr;
@@ -426,6 +427,7 @@ inline void
     const std::string* sparePartNumber = nullptr;
     const std::string* model = nullptr;
     const std::string* locationCode = nullptr;
+    const bool* memFunctional = nullptr;
 
     const bool success = sdbusplus::unpackPropertiesNoThrow(
         dbus_utils::UnpackErrorPrinter(), properties, "MemoryDataWidth",
@@ -438,7 +440,7 @@ inline void
         memoryConfiguredSpeedInMhz, "MemoryType", memoryType, "Channel",
         channel, "MemoryController", memoryController, "Slot", slot, "Socket",
         socket, "SparePartNumber", sparePartNumber, "Model", model,
-        "LocationCode", locationCode);
+        "LocationCode", locationCode, "Functional", memFunctional);
 
     if (!success)
     {
@@ -487,6 +489,14 @@ inline void
         aResp->res.jsonValue[jsonPtr]["BusWidthBits"] = *memoryTotalWidth;
     }
 
+    if (memFunctional != nullptr)
+    {
+        if (*memFunctional == false)
+        {
+            aResp->res.jsonValue["Status"]["Health"] = "Critical";
+        }
+    }
+
     if (ecc != nullptr)
     {
         constexpr const std::array<const char*, 4> values{
@@ -609,10 +619,6 @@ inline void getDimmDataByService(std::shared_ptr<bmcweb::AsyncResp> aResp,
                                  const std::string& service,
                                  const std::string& objPath)
 {
-    auto health = std::make_shared<HealthPopulate>(aResp);
-    health->selfPath = objPath;
-    health->populate();
-
     BMCWEB_LOG_DEBUG << "Get available system components.";
     sdbusplus::asio::getAllProperties(
         *crow::connections::systemBus, service, objPath, "",
-- 
2.34.1

