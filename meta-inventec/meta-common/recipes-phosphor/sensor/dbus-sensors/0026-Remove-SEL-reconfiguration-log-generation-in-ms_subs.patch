From dc88cbded014dcd428e3458c97cda59c4869455b Mon Sep 17 00:00:00 2001
From: cynthia <wu.cynthia@inventec.com>
Date: Mon, 22 Aug 2022 22:51:23 +0800
Subject: [PATCH 26/27] Remove SEL reconfiguration log generation in
 ms_subsystem_check
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

    Symptom/Reason：
         Remove SEL reconfiguration log generation and related check rules in
        ms_subsystem_check
    Root Cause：
         After we support BMC-SYS-0006~BMC-SYS-0009, we can move the SEL log
	generation and check rules to oem commands
    Solution/Change：
	[ms_subsystem_check.cpp]
        Remove SEL reconfiguration log generation and related check rules
    Entry Test：
	N/A
---
 src/ms_subsystem_check.cpp | 446 -------------------------------------
 1 file changed, 446 deletions(-)

diff --git a/src/ms_subsystem_check.cpp b/src/ms_subsystem_check.cpp
index a5b881b..982bfc0 100644
--- a/src/ms_subsystem_check.cpp
+++ b/src/ms_subsystem_check.cpp
@@ -599,447 +599,6 @@ static const std::string InventoryCPUInterface =
 static const std::string InventoryDIMMInterface =
     "xyz.openbmc_project.Inventory.Item.Dimm";
 
-static std::optional<bool> getServiceAndObject(
-    std::shared_ptr<sdbusplus::asio::connection> bus,
-    std::vector<pathsOfServiceAndObject>& serviceAndObjectList,
-    std::string inventoryInterface)
-{
-    GetSubTreeType resp;
-    std::vector<std::string> interfaces = {inventoryInterface};
-    auto method =
-        bus->new_method_call("xyz.openbmc_project.ObjectMapper",
-                             "/xyz/openbmc_project/object_mapper",
-                             "xyz.openbmc_project.ObjectMapper", "GetSubTree");
-
-    method.append("/", 0, interfaces);
-    try
-    {
-        auto reply = bus->call(method);
-        reply.read(resp);
-    }
-    catch (const sdbusplus::exception_t& e)
-    {
-        fprintf(stderr, "%s:%d exception:%s \n", __func__, __LINE__, e.what());
-        return std::nullopt;
-    }
-
-    for (auto p1 : resp)
-    {
-        auto objPath = p1.first;
-        auto vect1 = p1.second;
-        for (auto p2 : vect1)
-        {
-
-            auto service = p2.first;
-            pathsOfServiceAndObject val = {service, objPath};
-            serviceAndObjectList.push_back(val);
-        }
-    }
-    return std::make_optional<bool>(true);
-}
-
-const static constexpr char* SYSTEM_CONFIG_GODLEN_FILE =
-    "/usr/share/ipmi-providers/system_config_golden.json";
-
-bool ifNeedUpdateSystemConfigGoldenFile = false;
-
-static void
-    check_system_reconfigure(std::shared_ptr<sdbusplus::asio::connection> bus)
-{
-    fprintf(stderr, "%s\n", __func__);
-
-    std::vector<pathsOfServiceAndObject> serviceAndObjectList;
-
-    GetSubTreeType resp;
-
-    std::map<std::string, PCIESlot> pcieMap;
-    std::map<std::string, CPUSlot> cpuMap;
-    std::map<std::string, DIMMSlot> dimmMap;
-
-    // Get the subtree of the PCIE
-    getServiceAndObject(bus, serviceAndObjectList, InventoryPCIEInterface);
-    for (auto p : serviceAndObjectList)
-    {
-        auto lanes = getDbusProperty(
-            *bus, p.first, p.second, InventoryPCIEInterface, "Lanes");
-        PCIESlot slot = {   
-                            SLOTTYPE_PCIE, 
-                            p.second, 
-                            static_cast<size_t>(std::get<uint32_t>(lanes)) 
-                        };
-        pcieMap[p.second] = slot;
-    }
-    fprintf(stderr, "Smbios reports : PCIE has %d items \n", pcieMap.size());
-
-    serviceAndObjectList.clear();
-    // Get the subtree of the CPU
-    getServiceAndObject(bus, serviceAndObjectList, InventoryCPUInterface);
-    for (auto p : serviceAndObjectList)
-    {
-        auto coreCount = getDbusProperty(
-            *bus, p.first, p.second, InventoryCPUInterface, "CoreCount");
-        CPUSlot slot = {   
-                            SLOTTYPE_CPU, 
-                            p.second, 
-                            static_cast<size_t>(std::get<uint16_t>(coreCount))
-                        };
-        cpuMap[p.second] = slot;
-    }
-    fprintf(stderr, "Smbios reports : CPU %d items \n", cpuMap.size());
-
-    serviceAndObjectList.clear();
-    // Get the subtree of the DIMM
-    getServiceAndObject(bus, serviceAndObjectList, InventoryDIMMInterface);
-    for (auto p : serviceAndObjectList)
-    {
-        auto memorySize = getDbusProperty(
-            *bus, p.first, p.second, InventoryDIMMInterface, "MemorySizeInKB");
-        
-        DIMMSlot slot = {   
-                            SLOTTYPE_DIMM, 
-                            p.second, 
-                            static_cast<size_t>(std::get<uint32_t>(memorySize)) 
-                        };
-        dimmMap[p.second] = slot;
-    }
-    fprintf(stderr, "Smbios reports : DIMM has %d items \n", dimmMap.size());
-
-    //get the golden sample of system configuration by JSON
-
-    std::map<std::string, PCIESlot> gpcieMap;
-    std::map<std::string, CPUSlot> gcpuMap;
-    std::map<std::string, DIMMSlot> gdimmMap;
-
-    std::ifstream jsonfile(SYSTEM_CONFIG_GODLEN_FILE);
-    if (jsonfile.is_open())
-    {
-        auto root = nlohmann::json::parse(jsonfile, nullptr, false);
-        if (!root.is_discarded())
-        {
-            try
-            {
-                auto cpuss = root["cpu"];
-                for (auto& c : cpuss)
-                {
-                    std::stringstream ss;
-                    ss << "/xyz/openbmc_project/inventory/system/chassis/motherboard/";
-                    ss << std::string(c["name"]);
-                    CPUSlot slot = {
-                        SLOTTYPE_CPU,
-                        ss.str(),
-                        c["corecount"],
-                    };
-                    gcpuMap[ss.str()] = slot;
-                }
-
-                auto dimmss = root["dimm"];
-                for (auto& d: dimmss)
-                {
-                    std::stringstream ss;
-                    ss << "/xyz/openbmc_project/inventory/system/chassis/motherboard/";
-                    ss << std::string(d["name"]);
-                    DIMMSlot slot = {
-                        SLOTTYPE_DIMM,
-                        ss.str(),
-                        d["memorysizeinkb"],
-                    };
-                    
-                    gdimmMap[ss.str()] = slot;
-                }
-                
-                auto pciess = root["pcie"];
-                for (auto& p : pciess)
-                {
-                    std::stringstream ss;
-                    ss << "/xyz/openbmc_project/inventory/system/chassis/motherboard/";
-                    ss << std::string(p["name"]);
-                    PCIESlot slot = {
-                        SLOTTYPE_PCIE,
-                        ss.str(),
-                        p["lanes"],
-                    };
-
-                    gpcieMap[ss.str()] = slot;
-                }
-            }
-            catch (const std::exception& e)
-            {
-                fprintf(stderr, "parsing json info failed %s\n", e.what());
-            };
-        }else{
-            fprintf(stderr, " JSON is_discarded %s parsing error ?\n", root.is_discarded()? "true":"false");
-        }
-    }else{
-        fprintf(stderr, "%s can not be accessed \n", SYSTEM_CONFIG_GODLEN_FILE);
-        return;
-    }
-
-
-    //generate the SEL. 
-    //CPU diff smbiosmdr golden 
-    for(auto& map : cpuMap)
-    {
-        std::string key = map.first;
-        CPUSlot slot = map.second; 
-        std::vector<uint8_t> eventData = {0xFF, 0xFF, 0xFF};
-        //get cpu index, ex:cpu0
-        size_t pos = key.find("cpu");
-        int num;
-        uint8_t index = 0xFF;
-        if(pos != std::string::npos){
-            std::stringstream idx;
-            idx << key.substr(pos+3);
-            idx >> num;
-            index = static_cast<uint8_t>(num);
-
-        }else{
-            continue;
-        }
-
-        try
-        {   
-            CPUSlot gslot = gcpuMap.at(key);
-            if(slot.coreCount != gslot.coreCount){
-                ifNeedUpdateSystemConfigGoldenFile = true;
-                fprintf(stderr, "%s index=%d different\n",key.c_str(), index);
-                if(slot.coreCount==0 && gslot.coreCount!=0){
-                    //It is removed
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x00;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                }else if(slot.coreCount!=0 && gslot.coreCount==0){
-                    //It is added
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x01;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                }else{
-                    //It changed size, updated
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x00;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                    
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x01;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                }
-            }
-
-        }catch(std::exception& e){
-            fprintf(stderr, "Golden file lack of slot information %s exception:%s \n", key.c_str(), e.what());
-        }
-    }
-
-    //generate the SEL. 
-    //DIMM diff smbiosmdr golden 
-    for(auto& map : dimmMap)
-    {
-        std::string key = map.first;
-        DIMMSlot slot = map.second; 
-        std::vector<uint8_t> eventData = {0xFF, 0xFF, 0xFF};
-        size_t pos = key.find("dimm");
-        int num;
-        uint8_t index = 0xFF;
-        if(pos != std::string::npos){
-            std::stringstream idx;
-            idx << key.substr(pos+4);
-            idx >> num;
-            index = static_cast<uint8_t>(num);
-            index++; //start from 1          
-        }else{
-            continue;
-        }
-
-        try
-        {   
-            DIMMSlot gslot = gdimmMap.at(key);
-            if(slot.memorySizeInKb != gslot.memorySizeInKb){
-                ifNeedUpdateSystemConfigGoldenFile = true;
-                fprintf(stderr, "%s index=%d different\n",key.c_str(), index);
-                if(slot.memorySizeInKb==0 && gslot.memorySizeInKb!=0){
-                    //It is removed
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x10;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                }else if(slot.memorySizeInKb!=0 && gslot.memorySizeInKb==0){
-                    //It is added
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x11;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                }else{
-                    //It is changed size, updated
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x10;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                    
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x11;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                }
-            }
-
-        }catch(std::exception& e){
-            fprintf(stderr, "Golden file lack of slot information %s \n", key.c_str());
-        }
-    }
-
-
-    //generate the SEL. 
-    //PCIE diff smbiosmdr golden 
-    for(auto& map : pcieMap)
-    {
-        std::string key = map.first;
-        PCIESlot slot = map.second; 
-        std::vector<uint8_t> eventData = {0xFF, 0xFF, 0xFF};
-        size_t pos = key.find("pcieslot");
-        int num;
-        uint8_t index = 0xFF;
-        if(pos != std::string::npos){
-            std::stringstream idx;
-            idx << key.substr(pos+8);
-            idx >> num;
-            index = static_cast<uint8_t>(num);
-            index++; //start from 1          
-        }else{
-            continue;
-        }
-
-        try
-        {   
-            PCIESlot gslot = gpcieMap.at(key);
-            if(slot.lanes != gslot.lanes){
-                ifNeedUpdateSystemConfigGoldenFile = true;
-                fprintf(stderr, "%s index=%d different\n",key.c_str(), index);
-                if(slot.lanes==0 && gslot.lanes!=0){
-                    //It is removed
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x20;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                }else if(slot.lanes!=0 && gslot.lanes==0){
-                    //It is added
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x21;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                }else{
-                    //It is changed size, updated
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x20;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                    
-                    eventData.at(0) = 0xA0;
-                    eventData.at(1) = 0x21;
-                    eventData.at(2) = index;
-                    do_SystemEventRecordSEL(bus, DBUS_OBJPATH_SYSTEM_RECONFIGURE,
-                                            eventData,
-                                            std::string("System Reconfigure event"),
-                                            true, static_cast<uint8_t>(0x20));
-                }
-            }
-
-        }catch(std::exception& e){
-            fprintf(stderr, "Golden file lack of slot information %s \n", key.c_str());
-        }
-    }
-
-    if(ifNeedUpdateSystemConfigGoldenFile){
-        try{
-            Json root;
-
-            Json cpuList = Json::array();
-            for(auto& map : cpuMap){
-                std::string key = map.first;
-                CPUSlot slot = map.second; 
-                auto name = key.substr(key.find("cpu"));
-                Json obj;
-                obj["name"] = name;
-                obj["corecount"] = slot.coreCount;
-                cpuList.push_back(obj);
-            }
-
-
-            Json dimmList = Json::array();
-            for(auto& map : dimmMap){
-                std::string key = map.first;
-                DIMMSlot slot = map.second; 
-                auto name = key.substr(key.find("dimm"));
-                Json obj;
-                obj["name"] = name;
-                obj["memorysizeinkb"] = slot.memorySizeInKb;
-                dimmList.push_back(obj);
-            }
-
-
-            Json pcieList = Json::array();
-            for(auto& map : pcieMap){
-                std::string key = map.first;
-                PCIESlot slot = map.second; 
-                auto name = key.substr(key.find("pcieslot"));
-                Json obj;
-                obj["name"] = name;
-                obj["lanes"] = slot.lanes;
-                pcieList.push_back(obj);
-            }
-
-            root["cpu"] = cpuList;
-            root["dimm"] = dimmList;
-            root["pcie"] = pcieList;
-
-            std::ofstream gfile;
-            gfile.open(SYSTEM_CONFIG_GODLEN_FILE, std::ofstream::trunc);
-            gfile << root.dump(4);
-            gfile.close();
-
-
-        }catch(std::exception& e){
-            fprintf(stderr, "%s update system config file error %s \n", __func__, e.what());
-        }
-
-
-    }
-}
 
 int main(int argc, char** argv)
 {
@@ -1092,11 +651,6 @@ int main(int argc, char** argv)
             fprintf(stderr, "%s:%d exception%s \n", __FILE__, __LINE__, e.what());
         }
 
-        try{
-            check_system_reconfigure(systemBus);
-        }catch(std::exception &e){
-            fprintf(stderr, "%s:%d exception%s \n", __FILE__, __LINE__, e.what());
-        }
 
         sleep(MAX_SLEEP_TIME);
     }
-- 
2.33.0

