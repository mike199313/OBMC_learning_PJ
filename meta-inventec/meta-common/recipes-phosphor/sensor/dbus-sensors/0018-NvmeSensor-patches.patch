From 657518e6ffc0a81851f38fe498f1d21647167468 Mon Sep 17 00:00:00 2001
From: "pj.chen" <chen.pj@inventec.com>
Date: Thu, 17 Mar 2022 08:34:51 +0000
Subject: [PATCH] NvmeSensor - patches
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Bug 825 - [SW][Common][dbus-sensors] - Add sensorInfo interface to nvmesensor
Symptom/Reason:
    In the current Inventec design, entity-manager should configure sensorInfo for each sensor.
    Then Ipmi can get sensor numbers, entity ID, and instance.

Root Cause:
    N/A

Solution/Change:
    [nvmesensor]
        Add SensorInfo interface.

Entry Test:
sysadmin@starscream:~# busctl introspect xyz.openbmc_project.NVMeSensor /xyz/openbmc_project/sensors/temperature/BP2_EDSFF_J1
NAME                                                  TYPE      SIGNATURE RESULT/VALUE                             FLAGS
org.freedesktop.DBus.Introspectable                   interface -         -                                        -
.Introspect                                           method    -         s                                        -
org.freedesktop.DBus.Peer                             interface -         -                                        -
.GetMachineId                                         method    -         s                                        -
.Ping                                                 method    -         -                                        -
org.freedesktop.DBus.Properties                       interface -         -                                        -
.Get                                                  method    ss        v                                        -
.GetAll                                               method    s         a{sv}                                    -
.Set                                                  method    ssv       -                                        -
.PropertiesChanged                                    signal    sa{sv}as  -                                        -
xyz.openbmc_project.Association.Definitions           interface -         -                                        -
.Associations                                         property  a(sss)    1 "chassis" "all_sensors" "/xyz/openbmc… emits-change
xyz.openbmc_project.Sensor.IpmiSensor                 interface -         -                                        -
.entityID                                             property  t         26                                       emits-change
.entityInstance                                       property  t         11                                       emits-change
.sensorNumber                                         property  t         107                                      emits-change
xyz.openbmc_project.Sensor.Threshold.Critical         interface -         -                                        -
.CriticalAlarmHigh                                    property  b         false                                    emits-change
.CriticalAlarmLow                                     property  b         false                                    emits-change
.CriticalHigh                                         property  d         70                                       emits-change writable
.CriticalLow                                          property  d         5                                        emits-change writable
xyz.openbmc_project.Sensor.Threshold.Warning          interface -         -                                        -
.WarningAlarmHigh                                     property  b         false                                    emits-change
.WarningAlarmLow                                      property  b         false                                    emits-change
.WarningHigh                                          property  d         65                                       emits-change writable
.WarningLow                                           property  d         10                                       emits-change writable
xyz.openbmc_project.Sensor.Value                      interface -         -                                        -
.MaxValue                                             property  d         127                                      emits-change
.MinValue                                             property  d         0                                        emits-change
.Unit                                                 property  s         "xyz.openbmc_project.Sensor.Value.Unit.… emits-change
.Value                                                property  d         nan                                      emits-change writable
xyz.openbmc_project.State.Decorator.Availability      interface -         -                                        -
.Available                                            property  b         true                                     emits-change writable
xyz.openbmc_project.State.Decorator.OperationalStatus interface -         -                                        -
.Functional                                           property  b         true                                     emits-change

-------------------------------------------------------
Bug 827 - [SW][Common][dbus-sensors] - nvmesensor rootbus conflix cause sensor cannot update

Sympton/Reason:
    The current design for nvmesensor, would find the i2c root bus for nvme device.
    For the same root bus, would just create once.
    In this case, if nvmedevice is behind i2c mux, would only update one device.
    Should modify to update for each device on different i2c bus.

Root Cause:
    nvmesensor update base on rootbus.

Solution/Change:
    [nvmesensor]
        Create NvmeContext base on bus number instead of rootbus.

Entry Test:
After config nvmesensors in entity-manager

sysadmin@starscream:~# ipmitool sdr list
<---skip--->
BP2_EDSFF_J9     | 50.80 degrees C   | ok
<---skip--->
---
 include/NVMeSensor.hpp   |  2 ++
 src/NVMeBasicContext.cpp | 16 ++++++++++++----
 src/NVMeSensor.cpp       | 24 ++++++++++++++++++++++++
 src/NVMeSensorMain.cpp   | 13 ++++++++++---
 src/meson.build          |  1 +
 5 files changed, 49 insertions(+), 7 deletions(-)

diff --git a/include/NVMeSensor.hpp b/include/NVMeSensor.hpp
index a0dce78..77094fa 100644
--- a/include/NVMeSensor.hpp
+++ b/include/NVMeSensor.hpp
@@ -2,6 +2,7 @@
 
 #include <boost/asio/io_service.hpp>
 #include <sensor.hpp>
+#include <IpmiInfo.hpp>
 
 class NVMeSensor : public Sensor
 {
@@ -14,6 +15,7 @@ class NVMeSensor : public Sensor
                std::shared_ptr<sdbusplus::asio::connection>& conn,
                const std::string& sensorName,
                std::vector<thresholds::Threshold>&& thresholds,
+               std::vector<ipmidata::IpmiConfig>&& ipmiinfo,
                const std::string& sensorConfiguration, const int busNumber);
     ~NVMeSensor() override;
 
diff --git a/src/NVMeBasicContext.cpp b/src/NVMeBasicContext.cpp
index 5708ad8..d568af1 100644
--- a/src/NVMeBasicContext.cpp
+++ b/src/NVMeBasicContext.cpp
@@ -29,6 +29,9 @@ extern "C"
  * https://nvmexpress.org/wp-content/uploads/NVMe_Management_-_Technical_Note_on_Basic_Management_Command.pdf
  */
 
+/* Inventec - Reduce error log */
+static constexpr bool debug = false;
+
 static std::shared_ptr<std::array<uint8_t, 6>>
     encodeBasicQuery(int bus, uint8_t device, uint8_t offset)
 {
@@ -83,10 +86,15 @@ static ssize_t execBasicQuery(int bus, uint8_t addr, uint8_t cmd,
     size = i2c_smbus_read_block_data(fileHandle.handle(), cmd, resp.data());
     if (size < 0)
     {
-        std::cerr << "Failed to read block data from device 0x" << std::hex
-                  << (int)addr << " on bus " << std::dec << bus << ": "
-                  << strerror(errno) << "\n";
-        return size;
+
+        /* Inventec - Reduce error log*/
+        if(debug)
+        {
+            std::cerr << "Failed to read block data from device 0x" << std::hex
+                    << (int)addr << " on bus " << std::dec << bus << ": "
+                    << strerror(errno) << "\n";
+        }
+        return -errno;
     }
     if (size > UINT8_MAX + 1)
     {
diff --git a/src/NVMeSensor.cpp b/src/NVMeSensor.cpp
index 213e320..e03da70 100644
--- a/src/NVMeSensor.cpp
+++ b/src/NVMeSensor.cpp
@@ -26,6 +26,7 @@ NVMeSensor::NVMeSensor(sdbusplus::asio::object_server& objectServer,
                        std::shared_ptr<sdbusplus::asio::connection>& conn,
                        const std::string& sensorName,
                        std::vector<thresholds::Threshold>&& thresholdsIn,
+                       std::vector<ipmidata::IpmiConfig>&& ipmiinfo,
                        const std::string& sensorConfiguration,
                        const int busNumber) :
     Sensor(escapeName(sensorName), std::move(thresholdsIn), sensorConfiguration,
@@ -49,6 +50,28 @@ NVMeSensor::NVMeSensor(sdbusplus::asio::object_server& objectServer,
             objectServer.add_interface(
                 "/xyz/openbmc_project/sensors/temperature/" + name, interface);
     }
+
+    ipmiInterface = objectServer.add_interface(
+        "/xyz/openbmc_project/sensors/temperature/" + name,
+        "xyz.openbmc_project.Sensor.IpmiSensor");
+
+    if (ipmiinfo.empty())
+    {
+        // Default
+        ipmiInterface->register_property("sensorNumber", 0);
+        ipmiInterface->register_property("entityID", 0);
+        ipmiInterface->register_property("entityInstance", 0);
+    }
+    else
+    {
+        for (auto& ipmi : ipmiinfo)
+        {
+            ipmiInterface->register_property("sensorNumber", ipmi.number);
+            ipmiInterface->register_property("entityID", ipmi.entityId);
+            ipmiInterface->register_property("entityInstance", ipmi.entityIns);
+        }
+    }
+
     association = objectServer.add_interface(
         "/xyz/openbmc_project/sensors/temperature/" + name,
         association::interface);
@@ -64,6 +87,7 @@ NVMeSensor::~NVMeSensor()
         objServer.remove_interface(iface);
     }
     objServer.remove_interface(sensorInterface);
+    objServer.remove_interface(ipmiInterface);
     objServer.remove_interface(association);
 }
 
diff --git a/src/NVMeSensorMain.cpp b/src/NVMeSensorMain.cpp
index d5e3026..92314ec 100644
--- a/src/NVMeSensorMain.cpp
+++ b/src/NVMeSensorMain.cpp
@@ -146,20 +146,27 @@ static void handleSensorConfigurations(
                 std::cerr << "error populating thresholds for " << *sensorName
                           << "\n";
             }
+            std::vector<ipmidata::IpmiConfig> sensorIpmiConfig;
+            std::string labelHead = sensorName->substr(0, sensorName->find(" "));
+            if (!parseIpmiDataFromConfig(sensorData, sensorIpmiConfig, &labelHead))
+            {
+                std::cerr << "error populating ipmi for "
+                            << *sensorName << "\n";
+            }
 
             try
             {
                 // May throw for an invalid rootBus
+                /* Bug 827 - [SW][Common][dbus-sensors] - nvmesensor rootbus conflix cause sensor cannot update */
                 std::shared_ptr<NVMeContext> context =
-                    provideRootBusContext(io, nvmeDeviceMap, *rootBus);
+                    provideRootBusContext(io, nvmeDeviceMap, *busNumber);
 
                 // Construct the sensor after grabbing the context so we don't
                 // glitch D-Bus May throw for an invalid busNumber
                 std::shared_ptr<NVMeSensor> sensorPtr =
                     std::make_shared<NVMeSensor>(
                         objectServer, io, dbusConnection, *sensorName,
-                        std::move(sensorThresholds), interfacePath, *busNumber);
-
+                        std::move(sensorThresholds), std::move(sensorIpmiConfig), interfacePath, *busNumber);
                 context->addSensor(sensorPtr);
             }
             catch (const std::invalid_argument& ex)
diff --git a/src/meson.build b/src/meson.build
index 9f9ffc2..c25889f 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -269,6 +269,7 @@ if get_option('nvme').enabled()
 
     executable(
         'nvmesensor',
+        'IpmiInfo.cpp',
         sources: nvme_srcs,
         dependencies: nvme_deps,
         implicit_include_directories: false,
-- 
2.17.1

