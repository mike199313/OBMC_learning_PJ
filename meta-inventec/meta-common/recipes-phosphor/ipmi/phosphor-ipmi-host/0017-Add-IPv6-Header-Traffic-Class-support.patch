From fe2d2462597d98bfc23ea4da5f943a88700f0308 Mon Sep 17 00:00:00 2001
From: "Lin.TommySC" <lin.tommysc@inventec.com>
Date: Wed, 21 Jul 2021 02:01:37 +0000
Subject: [PATCH 17/31] Add IPv6 Header Traffic Class support

Symptom/Reason :
    - Add IPv6 Header Traffic Class support

Root Cause:
    - N/A

Solution/Change:
    [phosphor-ipmi-host]
        - Add handler for IPv6TrafficClass command
    [phosphor-ipmi-config]
        - Add ipv6_traffic_class config field
    [phosphor-snmp]
        - Set IPv6 Header Traffic Class before sending SNMP trap
    [phosphor-dbus-monitor]
        - Fix type mismatch when calling sendTrap

Entry Test:
    - Set IPv6 Header Traffic Class
        ipmitool raw 0x0c 0x01 0x01 0x34 0x2
    - Get IPv6 Header Traffic Class
        ipmitool raw 0x0c 0x02 0x01 0x34 0x00 0x00

---
 transporthandler.cpp | 20 ++++++++++++++++++++
 transporthandler.hpp |  2 ++
 2 files changed, 22 insertions(+)

diff --git a/transporthandler.cpp b/transporthandler.cpp
index 585c644..f397125 100644
--- a/transporthandler.cpp
+++ b/transporthandler.cpp
@@ -1570,6 +1570,19 @@ RspType<> setLan(Context::ptr ctx, uint4_t channelBits, uint4_t reserved1,
             channelCall<setVLANPriority>(channel, (uint8_t)priority);
             return responseSuccess();
         }
+        case LanParam::IPv6TrafficClass:
+        {
+            uint8_t tClass;
+            if (req.unpack(tClass) != 0 || !req.fullyUnpacked())
+            {
+                return responseReqDataLenInvalid();
+            }
+            if (updateConfigValue<uint8_t>(LAN_CONFIG_IPV6_TCLASS, tClass))
+            {
+                return responseResponseError();
+            }
+            return responseSuccess();
+        }
     }
 
     if ((parameter >= oemCmdStart) && (parameter <= oemCmdEnd))
@@ -1943,6 +1956,13 @@ RspType<message::Payload> getLan(Context::ptr ctx, uint4_t channelBits,
             ret.pack(priority);
             return responseSuccess(std::move(ret));
         }
+        case LanParam::IPv6TrafficClass:
+        {
+            uint8_t tClass = 0;
+            loadConfigValue<uint8_t>(LAN_CONFIG_IPV6_TCLASS, tClass);
+            ret.pack(tClass);
+            return responseSuccess(std::move(ret));
+        }
     }
 
     if ((parameter >= oemCmdStart) && (parameter <= oemCmdEnd))
diff --git a/transporthandler.hpp b/transporthandler.hpp
index 73fd927..9cf2a10 100644
--- a/transporthandler.hpp
+++ b/transporthandler.hpp
@@ -83,6 +83,7 @@ enum class LanParam : uint8_t
     cipherSuitePrivilegeLevels = 24,
     IPFamilySupport = 50,
     IPFamilyEnables = 51,
+    IPv6TrafficClass = 52,
     IPv6HopLimit = 53,
     IPv6Status = 55,
     IPv6StaticAddresses = 56,
@@ -728,6 +729,7 @@ constexpr auto LAN_CFG_FILE = "/usr/share/ipmi-providers/lan_config.json";
 constexpr auto LAN_CONFIG_COMM_STR = "community_str";
 constexpr auto LAN_CONFIG_PRI_RMCP_PORT = "primary_rmcp_port";
 constexpr uint8_t VLAN_PRIORITY_MASK = 0x07;
+constexpr auto LAN_CONFIG_IPV6_TCLASS = "ipv6_traffic_class";
 
 /** @brief get config value from LAN configuration file.
  *  @param[in] name - config name.
-- 
2.25.1