From aab823b1c23cd656ae4568ff58be3ca1733acbc3 Mon Sep 17 00:00:00 2001
From: Joseph Liu <kwliu@nuvoton.com>
Date: Thu, 24 Jun 2021 14:09:03 +0800
Subject: [PATCH] support hwmon sysfs in /sys/devices/virtual

Signed-off-by: Stanley Chu <yschu@nuvoton.com>
Signed-off-by: Joseph Liu <kwliu@nuvoton.com>
---
 readd.cpp | 24 ++++++++++++++++++------
 sysfs.cpp | 37 +++++++++++++++++++++++++++++++++++++
 sysfs.hpp |  1 +
 3 files changed, 56 insertions(+), 6 deletions(-)

diff --git a/readd.cpp b/readd.cpp
index 06e7d8c..fca54b1 100644
--- a/readd.cpp
+++ b/readd.cpp
@@ -50,7 +50,11 @@ int main(int argc, char** argv)
     {
         // This path may either be a device path (starts with
         // /devices), or an open firmware device tree path.
-        if (path.substr(0, 8) == "/devices")
+        if (path.substr(0, 16) == "/devices/virtual")
+        {
+            path = sysfs::findHwmonFromVirtualDevPath(path);
+        }
+        else if (path.substr(0, 8) == "/devices")
         {
             path = sysfs::findHwmonFromDevPath(path);
         }
@@ -72,12 +76,20 @@ int main(int argc, char** argv)
                         "Path not specified or invalid.");
     }
 
-    // Determine the physical device sysfs path.
-    auto calloutPath = sysfs::findCalloutPath(path);
-    if (calloutPath.empty())
+    std::string calloutPath;
+    if (path.substr(0, 20) == "/sys/devices/virtual")
     {
-        exit_with_error(app.help("", CLI::AppFormatMode::All),
-                        "Unable to determine callout path.");
+        calloutPath = path;
+    }
+    else
+    {
+        // Determine the physical device sysfs path.
+        calloutPath = sysfs::findCalloutPath(path);
+        if (calloutPath.empty())
+        {
+            exit_with_error(app.help("", CLI::AppFormatMode::All),
+                "Unable to determine callout path.");
+        }
     }
 
     hwmonio::HwmonIO io(path);
diff --git a/sysfs.cpp b/sysfs.cpp
index f5b12bc..6f94e79 100644
--- a/sysfs.cpp
+++ b/sysfs.cpp
@@ -238,6 +238,43 @@ std::string findHwmonFromDevPath(const std::string& devPath)
     return emptyString;
 }
 
+std::string findHwmonFromVirtualDevPath(const std::string& devPath)
+{
+    fs::path p{"/sys"};
+    p /= fs::path(devPath).relative_path();
+
+    try
+    {
+        // This path is also used as a filesystem path to an environment
+        // file, and that has issues with ':'s in the path so they've
+        // been converted to '--'s.  Convert them back now.
+        size_t pos = 0;
+        std::string path = p;
+        while ((pos = path.find("--")) != std::string::npos)
+        {
+            path.replace(pos, 2, ":");
+        }
+
+        auto dir_iter = fs::directory_iterator(path);
+        auto hwmonInst = std::find_if(
+            dir_iter, end(dir_iter), [](const fs::directory_entry& d) {
+                return (d.path().filename().string().find("hwmon") !=
+                        std::string::npos);
+            });
+        if (hwmonInst != end(dir_iter))
+        {
+            return hwmonInst->path();
+        }
+    }
+    catch (const std::exception& e)
+    {
+       fmt::print(stderr,
+                   "Unable to find Virtual hwmon directory from the dev path: {}\n",
+                   devPath.c_str());
+    }
+    return emptyString;
+}
+
 } // namespace sysfs
 
 // vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
diff --git a/sysfs.hpp b/sysfs.hpp
index 80fb3d6..71e76c6 100644
--- a/sysfs.hpp
+++ b/sysfs.hpp
@@ -61,6 +61,7 @@ std::string findHwmonFromOFPath(const std::string& ofNode);
  *            string if no match is found.
  */
 std::string findHwmonFromDevPath(const std::string& devPath);
+std::string findHwmonFromVirtualDevPath(const std::string& devPath);
 
 /** @brief Return the path to use for a call out.
  *
-- 
2.25.1

